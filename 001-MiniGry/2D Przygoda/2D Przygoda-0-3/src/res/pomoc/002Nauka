002 PentlaGry i Klawiatura

GamePanel

 private int FPS = 60;

 private KeyHandler keyH =  new KeyHandler();
 
 //set player default position
 private int playerX = 100;
 private int playerY = 100;
 private int playerSpeed = 4;
 
 public GamePanel(){
 this.addKeyListener(keyH);
 this.setFocusable(true);
 
 StartGameThread();
 }



public void run(){
while(gameThread != null){
     // dodanie zegara
     double drawInterval = 1000000000/FPS; // 0,01666 second
     double nextDrawTime = System.nanoTime() + drawInterval;
     
     
     
     //update
     upadte();
     
     // draw
     repanit();
     // move this to try{}
     duoble remainingTime =  nextDrawTime - System.nanoTime();
     
     remainingTime = remainingTime/1000000;
     
     if(remainingTime < 0){
     remainingTime = 0;
     }
     
     Thread,sleep((long) remainingTime);
     
     nextDrawTime += drawInterval;
    
    //System.out.println(" The game loop is running");
   }
}


public void update(){

   if(keyH.upPressed == true){ 
            playerY -= playerSpeed;
   } else if (keyH.downPressed == true) {
   playerY += playerSpeed;
   } else if (keyH.leftPressed == true){
   playerX -= playerSpeed;
   } else if(key.rightPressed == true){
   playerX += playerSpeed;
   }

}

public void paintComponent(Graphic g){
super.paintComponent(g);

Graphics g2 =  (Graphics2D)g;
g2.setColor(Color.white);
g2.fillRect(playerX, playerY, tileSize, tileSize);
g2.dipose();
}


class KeyHandler implements KeyListener
public boolean upPressed, downPressed, leftPressed, rightPressed;

public void keyPressed(KeyEvent e){

int code = e.getKeyCode();
if (code == KeyEvent.VK_W){
upPressed = true;
}

if (code == KeyEvent.VK_S){
downPressed = true;
}

if (code == KeyEvent.VK_A){
leftPressed = true;
}

if (code == KeyEvent.VK_D){
rightPressed = true;
}

}

public void keyReleased(KeyEvnt e){
int code = e.getKeyCode();
if (code == KeyEvent.VK_W){
upPressed = false;
}

if (code == KeyEvent.VK_S){
downPressed = false;
}

if (code == KeyEvent.VK_A){
leftPressed = false;
}

if (code == KeyEvent.VK_D){
rightPressed = false;
}
}


Druga pentla do gry wykorzytstamy ta

public void run(){

double drawInterval = 1 000 000 000/FPS; // 0,01666 second
double detla = 0;
long lastTime =  System.nanoTime();
long currentTime;
long timer = 0;
int drawCount = 0;

while(gameThread != null) {
currentTime = System.nanoTime();

delta += (currentTime - lastTime) / drawInterval;
timer+= (currentTime - lastTime);
lastTime =  currentTime;

if(delta >= 1){
update();
repaint();
delta--;
drawCount++;
}

if(timer >= 1000000000){
Sytem.out.println("FPS:" + drawCount);
drawCount = 0;
timer = 0;
}

}
}

